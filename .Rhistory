tracks_final_noNA,
coords = c("longitude_artist", "latitude_artist"),
na.fail = FALSE,
crs = my.projection
)
st_crs(tracks_shp)
# Affichage
mf_map(world_boundaries, col = "lemonchiffon2")
mf_map(tracks_shp, col = "#d35f3c", add = TRUE)
#Jointure spatiale entre la localisation des artistes des chansons "tracks_shp"
# et la localisation des pays/continents de la couche "world_boundaries" avec
# le prédicat "st_within"
tracks_world <- st_join(
x = tracks_shp,
y = world_boundaries[, c("name",
"continent",
"region",
"french_shor")],
join = st_within,
left = TRUE
)
View(tracks_world)
radarchart(df, caxislabels = c(0,0.25,0.5,0.75,1),
axistype = 1,
# Personnaliser le polygone
pcol = 'red',
pfcol = scales::alpha('red', 0.5),
plwd = 2, plty = 1,
# Personnaliser la grille
cglcol = 'grey', cglty = 1, cglwd = 0.8,
# Personnaliser l'axe
axislabcol = "grey",
# Étiquettes des variables
#vlcex = 'test', vlabels = 'test1',
title = 'Profil des chansons FMA')
tracks_median_continent <- tracks_world %>%
group_by(continent) %>%
summarise_at(
c("acousticness",
"valence",
"speechiness",
"liveness",
"instrumentalness",
"energy",
"danceability"), median
)
View(tracks_median_continent)
df_continent <- rbind(max_min, tracks_median_continent)
tracks_median_continent <- tracks_world %>%
group_by(continent) %>%
summarise_at(
c("acousticness",
"valence",
"speechiness",
"liveness",
"instrumentalness",
"energy",
"danceability"), median
) %>%
mutate(continent = ifelse(is.na(continent), "Other", continent))
View(tracks_median_continent)
df_continent <- rbind(max_min, tracks_median_continent)
tracks_median_continent <- tracks_world %>%
group_by(continent) %>%
summarise_at(
c("acousticness",
"valence",
"speechiness",
"liveness",
"instrumentalness",
"energy",
"danceability"), median
) %>%
mutate(continent = ifelse(is.na(continent), "Other", continent)) %>%
select(-geometry)
View(tracks_median_continent)
max_min <- matrix(c(1,0), nrow = 2, ncol = ncol(tracks_median_continent))
colnames(max_min) <- names(tracks_median_continent)
rownames(max_min) <- c("Max", "Min")
df_continent <- rbind(max_min, tracks_median_continent)
max_min <- matrix(c(1,0), nrow = 2, ncol = ncol(tracks_median_continent))
colnames(max_min) <- names(tracks_median_continent)
rownames(max_min) <- c("Max", "Min")
df_continent <- rbind(max_min, tracks_median_continent)
tracks_median_continent <- tracks_world %>%
as.data.frame() %>%
group_by(continent) %>%
summarise_at(
c("acousticness",
"valence",
"speechiness",
"liveness",
"instrumentalness",
"energy",
"danceability"), median
) %>%
mutate(continent = ifelse(is.na(continent), "Other", continent)) %>%
select(-geometry)
tracks_median_continent <- tracks_world %>%
as.data.frame() %>%
group_by(continent) %>%
summarise_at(
c("acousticness",
"valence",
"speechiness",
"liveness",
"instrumentalness",
"energy",
"danceability"), median
) %>%
mutate(continent = ifelse(is.na(continent), "Other", continent))
View(tracks_median_continent)
max_min <- matrix(c(1,0), nrow = 2, ncol = ncol(tracks_median_continent))
colnames(max_min) <- names(tracks_median_continent)
rownames(max_min) <- c("Max", "Min")
df_continent <- rbind(max_min, tracks_median_continent)
radarchart(df_continent, caxislabels = c(0,0.25,0.5,0.75,1),
axistype = 1,
# Personnaliser le polygone
pcol = 'red',
pfcol = scales::alpha('red', 0.5),
plwd = 2, plty = 1,
# Personnaliser la grille
cglcol = 'grey', cglty = 1, cglwd = 0.8,
# Personnaliser l'axe
axislabcol = "grey",
# Étiquettes des variables
#vlcex = 'test', vlabels = 'test1',
title = 'Profil des chansons FMA')
View(df_continent)
tracks_median_continent <- tracks_world %>%
as.data.frame() %>%
group_by(continent) %>%
summarise_at(
c("acousticness",
"valence",
"speechiness",
"liveness",
"instrumentalness",
"energy",
"danceability"), round(median,2)
) %>%
mutate(continent = ifelse(is.na(continent), "Other", continent))
tracks_median_continent <- tracks_world %>%
as.data.frame() %>%
group_by(continent) %>%
summarise_at(
c("acousticness",
"valence",
"speechiness",
"liveness",
"instrumentalness",
"energy",
"danceability"), ~round(median(.),2)
) %>%
mutate(continent = ifelse(is.na(continent), "Other", continent))
View(tracks_median_continent)
max_min <- matrix(c(1,0), nrow = 2, ncol = ncol(tracks_median_continent))
colnames(max_min) <- names(tracks_median_continent)
rownames(max_min) <- c("Max", "Min")
df_continent <- rbind(max_min, tracks_median_continent)
View(df_continent)
radarchart(df_continent, caxislabels = c(0,0.25,0.5,0.75,1),
axistype = 1,
# Personnaliser le polygone
pcol = 'red',
pfcol = scales::alpha('red', 0.5),
plwd = 2, plty = 1,
# Personnaliser la grille
cglcol = 'grey', cglty = 1, cglwd = 0.8,
# Personnaliser l'axe
axislabcol = "grey",
# Étiquettes des variables
#vlcex = 'test', vlabels = 'test1',
title = 'Profil des chansons FMA')
radarchart(df_continent, caxislabels = c(0,0.25,0.5,0.75,1),
axistype = 1,
# Personnaliser le polygone
pcol = rainbow(6),
#pfcol = scales::alpha(, 0.5),
plwd = 2, plty = 1,
# Personnaliser la grille
cglcol = 'grey', cglty = 1, cglwd = 0.8,
# Personnaliser l'axe
axislabcol = "grey",
# Étiquettes des variables
#vlcex = 'test', vlabels = 'test1',
title = 'Profil des chansons FMA')
tracks_median_continent <- tracks_world %>%
as.data.frame() %>%
group_by(continent) %>%
summarise_at(
c("acousticness",
"valence",
"speechiness",
"liveness",
"instrumentalness",
"energy",
"danceability"), ~round(median(.),2)
) %>%
mutate(continent = ifelse(is.na(continent), "Other", continent)) %>%
select(-continent)
View(tracks_median_continent)
max_min <- matrix(c(1,0), nrow = 2, ncol = ncol(tracks_median_continent))
colnames(max_min) <- names(tracks_median_continent)
rownames(max_min) <- c("Max", "Min", "Africa", "Americas", "Asia", "Europe", "Oceania", "Other")
rownames(max_min) <- c("Max", "Min")
rownames(tracks_median_continent) <- c("Africa", "Americas", "Asia", "Europe", "Oceania", "Other")
df_continent <- rbind(max_min, tracks_median_continent)
View(df_continent)
radarchart(df_continent, caxislabels = c(0,0.25,0.5,0.75,1),
axistype = 1,
# Personnaliser le polygone
pcol = rainbow(6),
#pfcol = scales::alpha(, 0.5),
plwd = 2, plty = 1,
# Personnaliser la grille
cglcol = 'grey', cglty = 1, cglwd = 0.8,
# Personnaliser l'axe
axislabcol = "grey",
# Étiquettes des variables
#vlcex = 'test', vlabels = 'test1',
title = 'Profil des chansons FMA')
legend(
x = "bottom", legend = rownames(df_continent[-c(1,2),]), horiz = TRUE,
bty = "n", pch = 20 , col = rainbow(6),
text.col = "black", cex = 1, pt.cex = 1.5
)
legend(
x = "bottom", legend = rownames(df_continent[-c(1,2),]), horiz = FALSE,
bty = "n", pch = 20 , col = rainbow(6),
text.col = "black", cex = 1, pt.cex = 1.5
)
radarchart(df_continent, caxislabels = c(0,0.25,0.5,0.75,1),
axistype = 1,
# Personnaliser le polygone
pcol = rainbow(6),
#pfcol = scales::alpha(, 0.5),
plwd = 2, plty = 1,
# Personnaliser la grille
cglcol = 'grey', cglty = 1, cglwd = 0.8,
# Personnaliser l'axe
axislabcol = "grey",
# Étiquettes des variables
#vlcex = 'test', vlabels = 'test1',
title = 'Profil des chansons FMA par continent')
legend(
x = "left", legend = rownames(df_continent[-c(1,2),]), horiz = FALSE,
bty = "n", pch = 20 , col = rainbow(6),
text.col = "black", cex = 1, pt.cex = 1.5
)
radarchart(df_continent, caxislabels = c(0,0.25,0.5,0.75,1),
axistype = 1,
# Personnaliser le polygone
pcol = rainbow(6),
#pfcol = scales::alpha(, 0.5),
plwd = 2, plty = 1,
# Personnaliser la grille
cglcol = 'grey', cglty = 1, cglwd = 0.8,
# Personnaliser l'axe
axislabcol = "grey",
# Étiquettes des variables
#vlcex = 'test', vlabels = 'test1',
title = 'Profil des chansons FMA par continent')
legend(
x = "left", legend = rownames(df_continent[-c(1,2),]), horiz = FALSE,
bty = "n", pch = 20 , col = rainbow(6),
legend = c("Afrique", "Amérique", "Asie", "Europe", "Océanie", "Autre"),
text.col = "black", cex = 1, pt.cex = 1.5
)
rownames(tracks_median_continent) <- c("Afrique", "Amérique", "Asie", "Europe", "Océanie", "Autre")
radarchart(df_continent, caxislabels = c(0,0.25,0.5,0.75,1),
axistype = 1,
# Personnaliser le polygone
pcol = rainbow(6),
#pfcol = scales::alpha(, 0.5),
plwd = 2, plty = 1,
# Personnaliser la grille
cglcol = 'grey', cglty = 1, cglwd = 0.8,
# Personnaliser l'axe
axislabcol = "grey",
# Étiquettes des variables
#vlcex = 'test', vlabels = 'test1',
title = 'Profil des chansons FMA par continent')
legend(
x = "left", legend = rownames(df_continent[-c(1,2),]), horiz = FALSE,
bty = "n", pch = 20 , col = rainbow(6),
text.col = "black", cex = 1, pt.cex = 1.5
)
df_continent <- rbind(max_min, tracks_median_continent)
radarchart(df_continent, caxislabels = c(0,0.25,0.5,0.75,1),
axistype = 1,
# Personnaliser le polygone
pcol = rainbow(6),
#pfcol = scales::alpha(, 0.5),
plwd = 2, plty = 1,
# Personnaliser la grille
cglcol = 'grey', cglty = 1, cglwd = 0.8,
# Personnaliser l'axe
axislabcol = "grey",
# Étiquettes des variables
#vlcex = 'test', vlabels = 'test1',
title = 'Profil des chansons FMA par continent')
legend(
x = "left", legend = rownames(df_continent[-c(1,2),]), horiz = FALSE,
bty = "n", pch = 20 , col = rainbow(6),
text.col = "black", cex = 1, pt.cex = 1.5
)
radarchart(df_continent, caxislabels = c(0,0.25,0.5,0.75,1),
axistype = 1,
# Personnaliser le polygone
pcol = c('#FF0000','#00FF00', '#0000FF','#FFFF00', '#800080', '#40E0D0'),
#pfcol = scales::alpha(, 0.5),
plwd = 2, plty = 1,
# Personnaliser la grille
cglcol = 'grey', cglty = 1, cglwd = 0.8,
# Personnaliser l'axe
axislabcol = "grey",
# Étiquettes des variables
#vlcex = 'test', vlabels = 'test1',
title = 'Profil des chansons FMA par continent')
legend(
x = "left", legend = rownames(df_continent[-c(1,2),]), horiz = FALSE,
bty = "n", pch = 20 , col = c(
'#FF0000','#00FF00', '#0000FF','#FFFF00', '#800080', '#40E0D0' ),
text.col = "black", cex = 1, pt.cex = 1.5
)
radarchart(df_continent, caxislabels = c(0,0.25,0.5,0.75,1),
axistype = 1,
# Personnaliser le polygone
pcol = c('#FF0000','#00FF00', '#0000FF','#FFFF00', '#800080', '#40E0D0'),
#pfcol = scales::alpha(, 0.5),
plwd = 2, plty = 1,
# Personnaliser la grille
cglcol = 'grey', cglty = 1, cglwd = 0.8,
# Personnaliser l'axe
axislabcol = "grey",
# Étiquettes des variables
#vlcex = 'test', vlabels = 'test1',
title = 'Profil des chansons FMA par continent')
legend(
x = "left", y = "bottom", legend = rownames(df_continent[-c(1,2),]), horiz = FALSE,
bty = "n", pch = 20 , col = c(
'#FF0000','#00FF00', '#0000FF','#FFFF00', '#800080', '#40E0D0' ),
text.col = "black", cex = 1, pt.cex = 1.5
)
radarchart(df_continent, caxislabels = c(0,0.25,0.5,0.75,1),
axistype = 1,
# Personnaliser le polygone
pcol = c('#FF0000','#00FF00', '#0000FF','#FFFF00', '#800080', '#40E0D0'),
#pfcol = scales::alpha(, 0.5),
plwd = 2, plty = 1,
# Personnaliser la grille
cglcol = 'grey', cglty = 1, cglwd = 0.8,
# Personnaliser l'axe
axislabcol = "grey",
# Étiquettes des variables
#vlcex = 'test', vlabels = 'test1',
title = 'Profil des chansons FMA par continent')
legend(
x = "right", y = "bottom", legend = rownames(df_continent[-c(1,2),]), horiz = FALSE,
bty = "n", pch = 20 , col = c(
'#FF0000','#00FF00', '#0000FF','#FFFF00', '#800080', '#40E0D0' ),
text.col = "black", cex = 1, pt.cex = 1.5
)
radarchart(df_continent, caxislabels = c(0,0.25,0.5,0.75,1),
axistype = 1,
# Personnaliser le polygone
pcol = c('#FF0000','#00FF00', '#0000FF','#FFFF00', '#800080', '#40E0D0'),
#pfcol = scales::alpha(, 0.5),
plwd = 2, plty = 1,
# Personnaliser la grille
cglcol = 'grey', cglty = 1, cglwd = 0.8,
# Personnaliser l'axe
axislabcol = "grey",
# Étiquettes des variables
#vlcex = 'test', vlabels = 'test1',
title = 'Profil médian des chansons FMA par continent')
radarchart(df_continent, caxislabels = c(0,0.25,0.5,0.75,1),
axistype = 1,
# Personnaliser le polygone
pcol = c('#FF0000','#00FF00', '#0000FF','#FFFF00', '#800080', '#40E0D0'),
#pfcol = scales::alpha(, 0.5),
plwd = 2, plty = 1,
# Personnaliser la grille
cglcol = 'grey', cglty = 1, cglwd = 1,
# Personnaliser l'axe
axislabcol = "grey")
legend(
x = "right", y = "bottom", legend = rownames(df_continent[-c(1,2),]), horiz = FALSE,
bty = "n", pch = 20 , col = c(
'#FF0000','#00FF00', '#0000FF','#FFFF00', '#800080', '#40E0D0' ),
text.col = "black", cex = 1, pt.cex = 1.5
)
tracks_explicit <- tracks_final_noNA %>% group_by(genre_top) %>%
summarise(Num_explicit_tracks = round((sum(track_explicit == 'Radio-Unsafe')/n())*100,2))
bar_plot(tracks_explicit, x = genre_top, x_lab = "Genre musicale",
y = Num_explicit_tracks, y_lab = "Pourcentage de chansons explicit",
x_angle = 45)
#Création du subset pour l'ACP
#On sélectionne les 1000 premières lignes
subset_tracks_final_noNA = tracks_final_noNA_num[1:1000,]
tracks_selection <- subset_tracks_final_noNA %>%
filter(
duration < 600 &
favorites <= 25 &
listens <= 4000 &
#listens <= 20000 &
tempo >= 40 & tempo <= 225 &
speechiness < 0.2 &
liveness <= 0.4 &
danceability >= 0.1 & danceability <= 0.7
)
dataACP <- tracks_selection
View(dataACP)
mat_var_cov <- var(dataACP)
mat_var_cov
#normalisation
center_reduce <- function(x){
avg <- mean(x, na.rm = TRUE)
ET <- sd(x)
return((x-avg)/ET)
}
for (colonne in colnames(dataACP)){
dataACP[[colonne]] <- abs(center_reduce(dataACP[[colonne]]))
}
#Calcul ACP
resultACP <- dudi.pca(dataACP, nf = 3, scannf = FALSE, scale = T )
resultACP
#Valeurs propres
resultACP$eig
#inertie
inertietot <- sum(resultACP$eig)
inertietot
#Extraction valeurs propres/variances composantes principales
get_eigenvalue(resultACP)
#Visualisation des valeurs propres (Scree plot)
fviz_eig(resultACP)
get_pca_ind(resultACP)
get_pca_var(resultACP)
fviz_pca_ind(resultACP)
#Cercle de corrélation
fviz_pca_var(resultACP)
View(tracks_explicit)
tracks_explicit <- tracks_final_noNA %>% #group_by(genre_top) %>%
summarise(Num_explicit_tracks = round((sum(track_explicit == 'Radio-Unsafe')/n())*100,2)) %>%
View(tracks_explicit)
tracks_explicit <- tracks_final_noNA %>% #group_by(genre_top) %>%
summarise(Num_explicit_tracks = round((sum(track_explicit == 'Radio-Unsafe')/n())*100,2))
View(tracks_explicit)
tracks_explicit <- tracks_final_noNA %>% group_by(genre_top) %>%
summarise(Num_explicit_tracks = round((sum(track_explicit == 'Radio-Unsafe')/n())*100,2))
View(tracks_explicit)
tracks_explicit <- tracks_final_noNA %>%
filter (track_explicit == 'Radio-Unsafe') %>%
group_by(genre_top) %>%
summarise(Num_explicit_tracks = round((sum(track_explicit == 'Radio-Unsafe')/n())*100,2))
View(tracks_explicit)
tracks_explicit <- tracks_final_noNA %>%
filter (track_explicit == 'Radio-Unsafe') %>%
group_by(genre_top) %>%
summarise(Num_explicit_tracks = round((sum(track_explicit)/n())*100,2))
tracks_explicit <- tracks_final_noNA %>%
filter (track_explicit == 'Radio-Unsafe') %>%
group_by(genre_top) %>%
summarise(n())
View(tracks_explicit)
tracks_explicit <- tracks_final_noNA %>%
filter (track_explicit == 'Radio-Unsafe') %>%
group_by(genre_top) %>%
summarise(Perc_explicit_tracks = n()) %>%
mutate(Perc_explicit_tracks)
View(tracks_explicit)
tracks_explicit <- tracks_final_noNA %>%
filter (track_explicit == 'Radio-Unsafe') %>%
group_by(genre_top) %>%
summarise(Perc_explicit_tracks = n()) %>%
mutate(Perc_explicit_tracks = Perc_explicit_tracks/sum(Perc_explicit_tracks)*100)
View(tracks_explicit)
tracks_explicit <- tracks_final_noNA %>%
filter (track_explicit == 'Radio-Unsafe') %>%
group_by(genre_top) %>%
summarise(Perc_explicit_tracks = n()) %>%
mutate(Perc_explicit_tracks = round(Perc_explicit_tracks/sum(Perc_explicit_tracks)*100, 2))
View(tracks_explicit)
bar_plot(tracks_explicit, x = genre_top, x_lab = "Genre musicale",
y = Perc_explicit_tracks, y_lab = "Pourcentage de chansons explicit",
x_angle = 45)
tracks_explicit <- tracks_final_noNA %>%
filter (track_explicit == 'Radio-Unsafe') %>%
group_by(genre_top) %>%
summarise(Perc_explicit_tracks = n()) %>%
mutate(Perc_explicit_tracks = round(Perc_explicit_tracks/sum(Perc_explicit_tracks)*100, 2)) %>>%
mutate(genre_top = ifelse(is.na(genre_top), "Autre", genre_top))
tracks_explicit <- tracks_final_noNA %>%
filter (track_explicit == 'Radio-Unsafe') %>%
group_by(genre_top) %>%
summarise(Perc_explicit_tracks = n()) %>%
mutate(Perc_explicit_tracks = round(Perc_explicit_tracks/sum(Perc_explicit_tracks)*100, 2)) %>%
mutate(genre_top = ifelse(is.na(genre_top), "Autre", genre_top))
View(tracks_explicit)
View(tracks_final_noNA)
tracks_explicit <- tracks_final_noNA %>%
filter (track_explicit == 'Radio-Unsafe') %>%
group_by(genre_top) %>%
summarise(Perc_explicit_tracks = n()) %>%
mutate(Perc_explicit_tracks = round(Perc_explicit_tracks/sum(Perc_explicit_tracks)*100, 2)) %>%
mutate(genre_top = ifelse(genre_top == "", "Autre", genre_top))
View(tracks_explicit)
bar_plot(tracks_explicit, x = genre_top, x_lab = "Genre musicale",
y = Perc_explicit_tracks, y_lab = "Pourcentage de chansons explicit",
x_angle = 45)
